*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}
:root{ /* adding variables*/
    --color-primary: #191d2b;          /* Color variable black*/
    --color-secondary: #095469;          
    --color-white: #ffffff;         
    --color-black: #000;         
    --color-grey0: #f8f8f8;         
    --color-grey-1: #dbe1e8;         
    --color-grey-2: #b2becd;         
    --color-grey-3: #6c7983;          
    --color-grey-4: #454e56;         
    --color-grey-5: #2a2e35;          
    --color-grey-6: #12181b;         
    --transition: all .4s ease-in-out; 
    --Box--Shadow:0 3px 15px rgba(0,0,0,.3);// 0 x axis, 3 y last paremeter is for opacity

}
body{
    background-color: var(--color-primary); /*Using a Variable or calling a variable*/
    font-family: 'Poppins', sans-serif;
    font-size: 1.1rem;
    color: var(--color-white);
    transition: all .4s ease-in-out;
}
a{
    display: inline-block; /*parang overflow : hidden but for squares.*/
    text-decoration: none;
    color: inherit; /*Inherit color from font "Body"*/
    font-family:inherit; 
}
header{
    height: 100vh;
    color: var(--color-white);
    overflow: hidden;
}
section{
    min-height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding:3rem 18rem ; /*spacing, 3 rem top / bottom, then 18 left/right*/
}
.section{
    transform: translateY(-100%) scale(0);
    transition: var(--transition);
    background-color: var(--color-primary);
}
.sec1{
    display: none;
    transform: translateY(0) scale(1);
    
}
.sec2{
    display: none;
    transform: translateY(0) scale(1);
   
}
.sec3{
    display: none;
    transform: translateY(0) scale(1);
   
}
.sec4{
    display: none;
    transform: translateY(0) scale(1);
  
}
.sec5{
    display: none;
    transform: translateY(0) scale(1);
    
}

.active {
    display: block;
    animation: contactAnim 1s ease-in-out;
    @keyframes contactAnim {
        0% {
            transform: translateX(100%)scaleX(0);
        }
        70%{
            transform: translateX(30%) scaleX(1)
        }
        100% {
            transform: translateX(0%) scaleX(1); 
        }
    }
}

//Controls
.controls{
position: fixed; //parent container
z-index: 10;
top: 50%;
right: 3%;
display: flex;
flex-direction: column;
transform: translateY(-50%); //center in y axis ?!?!
align-items: center;
justify-content: center;
    .active-btn{
    background-color: var(--color-secondary) !important; // important rule, override all previous style
    transition: var(--transition);
    i{
        color:var(--color-white) !important;
    }
    }
    .control{// we can nest classes in SAS
     padding: 1rem;
    cursor: pointer;
    background-color: var(--color-grey-4);
    width: 55px;
    height: 55px; //this is for background individually
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin:.7rem 0;// line spacing 7 top/bottom, 0 left and right
    box-shadow: var(--Box--Shadow);
    i{
        font-size: 1rem;
        color: var(--color-grey-2);
        pointer-events: none; // meaning icons doesnt react to click

    }
}

}

// Header Content
.header-content{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;
    .left-header{
        display: flex;
        align-items: center;
        position: relative;
        .h-shape{
            transition: var(--transition);
            width: 65%;
            height: 100%;
            background-color: var(--color-grey-4);
            position: absolute;
            left: 0;
            top:0;
             // for it to be in the background
            clip-path: polygon( 0 0, 46% 0, 79% 100%, 0% 100%);
        }

        .image{
            border-radius: 50px ;
            margin-left: 4rem;
            img{
                border-radius: 15px; //fcker wont let me call ID!!
                object-fit: cover;
                transition: var(--transition);
                filter: grayscale(100%);//filter
                &:hover{
                    filter: grayscale(0); //at hover effect will be removed
                }
            }
        }
    }


    .right-header{
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem ;
        .name{
            font-size:3rem;
            span{
                color: var(--color-secondary);
            }
        }

        p{
            margin: 1.5rem;
            line-height: 2rem;
            span{
                color: var(--color-secondary);
            }
        }
    }


}


.main-title{
    text-align: center;
    h2{
        position: relative;
        text-transform: uppercase;
        font-size: 4rem;
        font-weight: 700;
        span{
            color: var(--color-secondary);
        }
        .bg-text{
            position: absolute;
            top: 50%;
            left: 50%;
            color: var(--color-grey-5);
            transition: var(--transition);
            z-index: -1; // useless code doesnt work for some reason
            transform: translate(-50%, -50%); //means going to send us something ?!?!?!
            font-weight: 800;
            font-size: 5.3rem;
        }
    }

}

//About Container ~~~ Independent
.about-container{
    display: grid;
    grid-template-columns: repeat(2,1fr); // easy way of saying parameters 2 columns 1/fraction of the same size
    padding-top: 3.5rem;
    padding-bottom:5rem;
    .right-about{
        display: grid;
        grid-template-columns: repeat(2,1fr);
        grid-gap: 2rem; //like line space, gap between grids
        .about-item{
            border: 1px solid var(grey5);
            border-radius: 15px;
            transition: var(--transition);
            //box-shadow: 1px 2px 15px rgba(0,0,0,.1);
            &:hover{
                cursor: default;
                transform: translateY(-5px);
                border: 1px solid var(--color-secondary);
                box-shadow: 1px 4px 15px rgba(0,0,0,.32);
            }
            .abt-text{
                padding: 1.5rem;
                display: flex;
                flex-direction: column;
                .large-text{
                    font-size: 3rem;
                    font-weight: 700;
                    color: var(--color-secondary);
                }
                .small-text{
                padding-left:3rem;
                position: relative;
                text-transform: uppercase;
                font-size: 1.2rem;
                color:var(--color-grey-1);
                letter-spacing: 2px;
                    &::before{
                        content: ''; // the line at the Project 3 
                        position: absolute;
                        left: 0px;
                        top:15px;
                        width:2rem;
                        height: 2px;
                        background-color: var(--color-grey-5);

                    }
                }
            }
        }
    }

    .left-about{
        padding-right: 5rem;
        p{
            line-height: 2rem;
            padding:1rem;
            color: var(--color-grey-1);
        }
        h4{
            font-size: 2rem;
            text-transform: uppercase;
        }
    }
}

//separate container
.about-stats{
    padding-bottom: 4rem;
    .progress-bars{ //container for progress bars
        display:grid;
        grid-template-columns: repeat(2, 1fr); //again this is 2 columns 1 fraction
        grid-gap:2rem;
        .progress-bar{
            display: flex;
            flex-direction: column;
            .prog-title{
                text-transform: uppercase;
                font-weight:500;
            }
            .progress-con{
                display: flex;
                align-items: center;
                .prog-text{
                    color: var(--color-grey-2);
                }
                .progress{ //the background for progress 
                    width: 100%;
                    height: .45rem;
                    background-color: var(--color-grey-4);
                    margin-left: 1rem;
                    position: relative;
                    span{ 
                        position: absolute;
                        top: 0;
                        left: 0;
                        height: 100%;
                        background-color: var(--color-secondary);
                        transition: var(--transition);
                        width: 60%;
                    }
                    .python{ //iinherited because its the same span and different class name
                        width: 50%;
                    }
                    .web-app{
                        width: 50%;
                    }
                    .form-app{
                        width:50%;
                    }
                    .js{
                        width:30%;
                    }
                    .git{
                        width:20%;
                    }
                }
            }
        }
    }
}







// The Button ~~~ Independent Components -- can be called again and again
.btn-con{
    display: flex;
    align-self: flex-start;
}
.main-btn{
    border-radius: 30px;
    color: inherit;
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    align-items: center;
    overflow: hidden;
    
    .btn-text{
    padding:0 2rem;
}
    .btn-icon{
    background-color: var(--color-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    padding: 1rem;

}

&::before//Pseudo Element we can access this later
{
   content:'';
   position: absolute;
   top: 0;
   right: 0;
   transform: translateX(100%);
   transition: var(--transition);
   z-index: -1;
}
&:hover{
    &::before{//pseudo element for button animation   
        width:100%; // how much the pseudo class before will ocuppy
        height: 100%;
    background-color: var(--color-secondary);
    transform: translateX(0);
    transition: var(--transition);
    }
}

}


